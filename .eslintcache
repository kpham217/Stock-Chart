[{"C:\\Users\\kpham\\OneDrive - BioVectra\\Desktop\\StockChart\\Stock-Chart\\src\\index.js":"1","C:\\Users\\kpham\\OneDrive - BioVectra\\Desktop\\StockChart\\Stock-Chart\\src\\App.js":"2","C:\\Users\\kpham\\OneDrive - BioVectra\\Desktop\\StockChart\\Stock-Chart\\src\\reportWebVitals.js":"3","C:\\Users\\kpham\\OneDrive - BioVectra\\Desktop\\StockChart\\Stock-Chart\\src\\StockData.js":"4","C:\\Users\\kpham\\OneDrive - BioVectra\\Desktop\\StockChart\\Stock-Chart\\src\\SearchArea.js":"5","C:\\Users\\kpham\\OneDrive - BioVectra\\Desktop\\StockChart\\Stock-Chart\\src\\getStockData.js":"6","C:\\Users\\kpham\\OneDrive - BioVectra\\Desktop\\StockChart\\Stock-Chart\\src\\DisplayCharts\\AreaChart.js":"7","C:\\Users\\kpham\\OneDrive - BioVectra\\Desktop\\StockChart\\Stock-Chart\\src\\DisplayCharts\\CandleStick.js":"8"},{"size":517,"mtime":1641310247461,"results":"9","hashOfConfig":"10"},{"size":201,"mtime":1641310247427,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1641310247462,"results":"12","hashOfConfig":"10"},{"size":4119,"mtime":1642041386808,"results":"13","hashOfConfig":"10"},{"size":5016,"mtime":1642042868954,"results":"14","hashOfConfig":"10"},{"size":32870,"mtime":1641310247457,"results":"15","hashOfConfig":"10"},{"size":3225,"mtime":1641310247430,"results":"16","hashOfConfig":"10"},{"size":3268,"mtime":1641310247431,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"sg4lfc",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\kpham\\OneDrive - BioVectra\\Desktop\\StockChart\\Stock-Chart\\src\\index.js",[],["40","41"],"C:\\Users\\kpham\\OneDrive - BioVectra\\Desktop\\StockChart\\Stock-Chart\\src\\App.js",[],"C:\\Users\\kpham\\OneDrive - BioVectra\\Desktop\\StockChart\\Stock-Chart\\src\\reportWebVitals.js",[],"C:\\Users\\kpham\\OneDrive - BioVectra\\Desktop\\StockChart\\Stock-Chart\\src\\StockData.js",["42","43","44","45"],"import React, { useState, useEffect } from 'react'\r\nimport { Getstockdata } from './getStockData';\r\nimport CandleStick from './DisplayCharts/CandleStick';\r\nimport AreaChart from './DisplayCharts/AreaChart'\r\nimport SearchArea from './SearchArea';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport classes from './styles/StockData.module.css';\r\nimport searchlogo from './imgs/search.png'\r\nimport axios from \"axios\";\r\nconst dataFile = require('./data/symbolFile.json')\r\nexport function Stockdata(props) {\r\n    const [symbolData, setData] = useState([]);\r\n    const [value, setValue] = React.useState('area');\r\n   \r\n    // console.log(csvJSON(symbolFile))\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n        \r\n    };\r\n\r\n    // useEffect(async () => {\r\n    //     async function fetchMyData() {\r\n    //         const data = await Getstockdata();\r\n    //         console.log(data);\r\n    //         data.sort(function (a, b) {\r\n    //             var dateA = new Date(a.date), dateB = new Date(b.date)\r\n    //             return dateA - dateB\r\n    //         });\r\n    //         setData(data);\r\n    //     }\r\n    //     fetchMyData();\r\n    //     const interval = setInterval(() => {\r\n\r\n    //         try {\r\n    //             async function fetchMyData() {\r\n    //                 const data = await Getstockdata();\r\n    //                 console.log(data);\r\n    //                 setData(data);\r\n    //               }\r\n    //               fetchMyData();\r\n\r\n    //         } catch (error) {\r\n    //             console.log(error);\r\n    //         }\r\n\r\n    //     }, 60000 * 15);\r\n    //     return () => clearInterval(interval);\r\n    // }, []);\r\n\r\n    return (\r\n        <div>\r\n            {/* <div className=\"App\"> */}\r\n            <div ><SearchArea setData={setData}></SearchArea> </div>\r\n            {symbolData.length > 0 ? (\r\n                <div style={{position:'relative'}}>\r\n                  \r\n                    \r\n                    <div className={classes.chartArea}> \r\n                    <h1  className={classes.stockName}>{symbolData[0].companyName}</h1>\r\n\r\n                    <div style={{clear:'both'}}> \r\n                    <h1 className={classes.price}>{parseFloat(symbolData[99].close).toFixed(2)}</h1>\r\n                    <span className={classes.currency}>USD</span>\r\n                    <span className={(parseFloat(symbolData[99].close)-parseFloat(symbolData[0].close)).toFixed(2) > 0 ? classes.up : classes.down}>\r\n                        {(parseFloat(symbolData[99].close)-parseFloat(symbolData[0].close)).toFixed(2)}  (\r\n                            {(((parseFloat(symbolData[99].close)-parseFloat(symbolData[0].close)).toFixed(2)/parseFloat(symbolData[99].close))*100).toFixed(2)}%) \r\n                    </span>\r\n                    </div>\r\n                  \r\n                    {value === 'area' ?   <AreaChart type={'hybrid'} data={symbolData} /> :  <CandleStick type={'hybrid'} data={symbolData} /> }\r\n                  \r\n                    <FormControl style={{ float: 'left', margin: '10px 10px 10px 50px' }} >\r\n                        <FormLabel component=\"legend\">Chart Type</FormLabel>\r\n                        <RadioGroup style={{ float: 'left', display: 'inline-block' }} value={value} onChange={handleChange}>\r\n                            <FormControlLabel value=\"area\" control={<Radio />} label=\"Area Chart\" />\r\n                            <FormControlLabel value=\"candlestick\" control={<Radio />} label=\"Candle Stick\" />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    </div>\r\n                </div>) : <div><h1 className={classes.header}>Search any ticker to get a quote</h1>\r\n                <img  src={searchlogo} className={classes.search} alt=\"search\"/>\r\n\r\n                </div>}\r\n\r\n            {/* </div> */}\r\n        </div>\r\n    )\r\n   \r\n}\r\n ","C:\\Users\\kpham\\OneDrive - BioVectra\\Desktop\\StockChart\\Stock-Chart\\src\\SearchArea.js",["46","47","48","49","50"],"import React from 'react'\r\n// import SearchIcon from '@material-ui/icons/';\r\nimport { Getstockdata } from './getStockData';\r\nimport { TextField, ListItem, List, Paper } from '@material-ui/core';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classes from './styles/SearchAreaStyle.module.css';\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\naxios.defaults.withCredentials = true;\r\nconst dataFile = require('./data/symbolFile.json')\r\n\r\naxios.get('https://stockchart.azurewebsites.net/api').then(res => {\r\n    // axios.get('http://localhost:3001/api').then(res => {\r\n\r\n    console.log(res.data)\r\n    console.log('test')\r\n})\r\nconst useStyles = makeStyles((theme) => ({\r\n    textField: {\r\n        float: 'left',\r\n        width: 1000,\r\n        margin: '30px 0 10px 0px',\r\n        // position: 'relative'\r\n    },\r\n    //style for font size\r\n    resize: {\r\n        fontSize: 20\r\n    },\r\n}));\r\nconst match = (s) => {\r\n    const p = Array.from(s).reduce((a, v, i) => `${a}[^${s.substr(i)}]*?${v}`, '');\r\n    const re = RegExp(p);\r\n\r\n    return dataFile.filter(v => v.Symbol.toLowerCase().match(re));\r\n};\r\nexport default function Searcharea({ setData }) {\r\n    const uiclasses = useStyles();\r\n    const [searchValue, setSearch] = useState('');\r\n    const [resultList, setResList] = useState([]);\r\n    const [tickerSelected, setTicker] = useState({\r\n        tickerSymbol: '',\r\n        companyName: ''\r\n    });\r\n    useEffect(async () => {\r\n        if (tickerSelected != '') {\r\n            async function fetchMyData() {\r\n                const data = await Getstockdata({ ...tickerSelected });\r\n                console.log(data);\r\n                data.sort(function (a, b) {\r\n                    var dateA = new Date(a.date), dateB = new Date(b.date)\r\n                    return dateA - dateB\r\n                });\r\n                setData(data);\r\n                setSearch('');\r\n            }\r\n            console.log('executing')\r\n            fetchMyData();\r\n            // const interval = setInterval(() => {\r\n\r\n            //     try {\r\n            //         async function fetchMyData() {\r\n            //             const data = await Getstockdata(tickerSelected);\r\n            //             console.log(data);\r\n            //             setData(data);\r\n            //           }\r\n            //           fetchMyData();\r\n\r\n            //     } catch (error) {\r\n            //         console.log(error);\r\n            //     }\r\n\r\n            // }, 60000 * 15);\r\n            // return () => clearInterval(interval);\r\n        }\r\n\r\n    }, [tickerSelected]);\r\n    const handleChange = (e) => {\r\n        setSearch(e.target.value);\r\n\r\n        // console.log(searchValue)\r\n    }\r\n    useEffect(() => {\r\n        if (searchValue !== \"\") {\r\n            console.log(searchValue.length);\r\n\r\n            const newList = dataFile.filter(item => {\r\n                var checker = false;\r\n                for (let i = 0; i < searchValue.length; i++) {\r\n\r\n                    if (item.Symbol.charAt(i).toLowerCase() == searchValue.charAt(i).toLowerCase())\r\n                        checker = true;\r\n                    else { checker = false; break; }\r\n                }\r\n                return checker;\r\n            });\r\n            // console.log(newList.slice(0,10))\r\n            setResList(newList.slice(0, 10))\r\n        }\r\n\r\n        // const newList = match(searchValue.toLowerCase())\r\n    }, [searchValue])\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.wrapper}>\r\n                <TextField\r\n                    className={uiclasses.textField}\r\n                    id=\"input-with-icon-textfield\"\r\n                    label=\"Search your ticker\"\r\n                    size=\"medium\"\r\n                    variant='outlined'\r\n                    value={searchValue}\r\n                    onChange={handleChange}\r\n                    InputProps={{\r\n                        classes: {\r\n                            input: uiclasses.resize,\r\n                        },\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <SearchIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                {\r\n                    searchValue !== \"\" ? <Paper style={{ maxHeight: 200, overflow: 'auto', width: 1000 }}>\r\n                        <List>\r\n\r\n                            {resultList.map(ticker => <ListItem button key={ticker.Symbol} value={ticker.Symbol} onClick={() => setTicker({\r\n                                tickerSymbol: ticker.Symbol,\r\n                                companyName: ticker.Name\r\n                            })}>{ticker.Symbol}</ListItem>)}\r\n                        </List>\r\n                    </Paper> : null\r\n                }\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\kpham\\OneDrive - BioVectra\\Desktop\\StockChart\\Stock-Chart\\src\\getStockData.js",["51","52","53","54","55","56","57","58","59","60"],"import React, { useState, useEffect } from 'react'\r\nimport { timeParse } from \"d3-time-format\";\r\nexport async function Getstockdata({tickerSymbol, companyName}) {\r\n    const API_KEY = 'H21T6LC1K3QPU5EI'\r\n    // const stock_symbol = symbol\r\n    let period = [];\r\n    let closeValues = [];\r\n    let openValues = [];\r\n    let highValues = [];\r\n    let lowValues = [];\r\n    let volumeValues = [];\r\n    let resultdata = [];\r\n\r\n    try{\r\n        console.log('executed');\r\n        await fetch(`https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${tickerSymbol}&interval=5min&apikey=${API_KEY}`)\r\n        .then(function(res) {\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            console.log(data)\r\n            for (let x in data['Time Series (5min)']){\r\n                resultdata.push({\r\n                    tickerSymbol,\r\n                    companyName,\r\n                    date: new Date(x),\r\n                    open: data['Time Series (5min)'][x]['1. open'],\r\n                    high: data['Time Series (5min)'][x]['2. high'],\r\n                    low: data['Time Series (5min)'][x]['3. low'],\r\n                    close: data['Time Series (5min)'][x]['4. close'],\r\n                    volume: +data['Time Series (5min)'][x]['5. volume']\r\n                })\r\n            }\r\n        })\r\n        // const data = {\r\n        //     \"Meta Data\": {\r\n        //         \"1. Information\": \"Intraday (5min) open, high, low, close prices and volume\",\r\n        //         \"2. Symbol\": \"IBM\",\r\n        //         \"3. Last Refreshed\": \"2020-12-18 20:00:00\",\r\n        //         \"4. Interval\": \"5min\",\r\n        //         \"5. Output Size\": \"Compact\",\r\n        //         \"6. Time Zone\": \"US/Eastern\"\r\n        //     },\r\n        //     \"Time Series (5min)\": {\r\n        //         \"2020-12-18 20:00:00\": {\r\n        //             \"1. open\": \"125.9200\",\r\n        //             \"2. high\": \"125.9200\",\r\n        //             \"3. low\": \"125.9200\",\r\n        //             \"4. close\": \"125.9200\",\r\n        //             \"5. volume\": \"102\"\r\n        //         },\r\n        //         \"2020-12-18 19:30:00\": {\r\n        //             \"1. open\": \"126.0000\",\r\n        //             \"2. high\": \"126.0000\",\r\n        //             \"3. low\": \"126.0000\",\r\n        //             \"4. close\": \"126.0000\",\r\n        //             \"5. volume\": \"210\"\r\n        //         },\r\n        //         \"2020-12-18 18:40:00\": {\r\n        //             \"1. open\": \"126.0000\",\r\n        //             \"2. high\": \"126.0000\",\r\n        //             \"3. low\": \"126.0000\",\r\n        //             \"4. close\": \"126.0000\",\r\n        //             \"5. volume\": \"180\"\r\n        //         },\r\n        //         \"2020-12-18 18:20:00\": {\r\n        //             \"1. open\": \"125.9999\",\r\n        //             \"2. high\": \"125.9999\",\r\n        //             \"3. low\": \"125.9999\",\r\n        //             \"4. close\": \"125.9999\",\r\n        //             \"5. volume\": \"903\"\r\n        //         },\r\n        //         \"2020-12-18 17:45:00\": {\r\n        //             \"1. open\": \"126.1100\",\r\n        //             \"2. high\": \"126.1100\",\r\n        //             \"3. low\": \"126.1100\",\r\n        //             \"4. close\": \"126.1100\",\r\n        //             \"5. volume\": \"220\"\r\n        //         },\r\n        //         \"2020-12-18 17:10:00\": {\r\n        //             \"1. open\": \"125.9000\",\r\n        //             \"2. high\": \"125.9000\",\r\n        //             \"3. low\": \"125.9000\",\r\n        //             \"4. close\": \"125.9000\",\r\n        //             \"5. volume\": \"237\"\r\n        //         },\r\n        //         \"2020-12-18 17:05:00\": {\r\n        //             \"1. open\": \"125.9000\",\r\n        //             \"2. high\": \"125.9000\",\r\n        //             \"3. low\": \"125.9000\",\r\n        //             \"4. close\": \"125.9000\",\r\n        //             \"5. volume\": \"251\"\r\n        //         },\r\n        //         \"2020-12-18 17:00:00\": {\r\n        //             \"1. open\": \"126.1500\",\r\n        //             \"2. high\": \"126.1500\",\r\n        //             \"3. low\": \"126.1500\",\r\n        //             \"4. close\": \"126.1500\",\r\n        //             \"5. volume\": \"206\"\r\n        //         },\r\n        //         \"2020-12-18 16:55:00\": {\r\n        //             \"1. open\": \"125.9000\",\r\n        //             \"2. high\": \"125.9000\",\r\n        //             \"3. low\": \"125.8600\",\r\n        //             \"4. close\": \"125.8600\",\r\n        //             \"5. volume\": \"602\"\r\n        //         },\r\n        //         \"2020-12-18 16:50:00\": {\r\n        //             \"1. open\": \"126.1000\",\r\n        //             \"2. high\": \"126.1000\",\r\n        //             \"3. low\": \"126.0000\",\r\n        //             \"4. close\": \"126.0000\",\r\n        //             \"5. volume\": \"335\"\r\n        //         },\r\n        //         \"2020-12-18 16:40:00\": {\r\n        //             \"1. open\": \"126.1000\",\r\n        //             \"2. high\": \"126.1000\",\r\n        //             \"3. low\": \"126.1000\",\r\n        //             \"4. close\": \"126.1000\",\r\n        //             \"5. volume\": \"157\"\r\n        //         },\r\n        //         \"2020-12-18 16:30:00\": {\r\n        //             \"1. open\": \"126.1500\",\r\n        //             \"2. high\": \"126.1500\",\r\n        //             \"3. low\": \"126.1500\",\r\n        //             \"4. close\": \"126.1500\",\r\n        //             \"5. volume\": \"2945\"\r\n        //         },\r\n        //         \"2020-12-18 16:20:00\": {\r\n        //             \"1. open\": \"125.8500\",\r\n        //             \"2. high\": \"126.0000\",\r\n        //             \"3. low\": \"125.8374\",\r\n        //             \"4. close\": \"125.8374\",\r\n        //             \"5. volume\": \"84260\"\r\n        //         },\r\n        //         \"2020-12-18 16:10:00\": {\r\n        //             \"1. open\": \"125.8500\",\r\n        //             \"2. high\": \"125.8500\",\r\n        //             \"3. low\": \"125.8500\",\r\n        //             \"4. close\": \"125.8500\",\r\n        //             \"5. volume\": \"247955\"\r\n        //         },\r\n        //         \"2020-12-18 16:05:00\": {\r\n        //             \"1. open\": \"125.8500\",\r\n        //             \"2. high\": \"125.8500\",\r\n        //             \"3. low\": \"125.8500\",\r\n        //             \"4. close\": \"125.8500\",\r\n        //             \"5. volume\": \"223311\"\r\n        //         },\r\n        //         \"2020-12-18 16:00:00\": {\r\n        //             \"1. open\": \"126.0300\",\r\n        //             \"2. high\": \"126.4000\",\r\n        //             \"3. low\": \"125.8400\",\r\n        //             \"4. close\": \"125.9700\",\r\n        //             \"5. volume\": \"361732\"\r\n        //         },\r\n        //         \"2020-12-18 15:55:00\": {\r\n        //             \"1. open\": \"125.7400\",\r\n        //             \"2. high\": \"126.1500\",\r\n        //             \"3. low\": \"125.6400\",\r\n        //             \"4. close\": \"126.0300\",\r\n        //             \"5. volume\": \"135628\"\r\n        //         },\r\n        //         \"2020-12-18 15:50:00\": {\r\n        //             \"1. open\": \"125.5700\",\r\n        //             \"2. high\": \"125.8000\",\r\n        //             \"3. low\": \"125.4750\",\r\n        //             \"4. close\": \"125.7435\",\r\n        //             \"5. volume\": \"81076\"\r\n        //         },\r\n        //         \"2020-12-18 15:45:00\": {\r\n        //             \"1. open\": \"125.2900\",\r\n        //             \"2. high\": \"125.5900\",\r\n        //             \"3. low\": \"125.2700\",\r\n        //             \"4. close\": \"125.5600\",\r\n        //             \"5. volume\": \"76883\"\r\n        //         },\r\n        //         \"2020-12-18 15:40:00\": {\r\n        //             \"1. open\": \"125.3200\",\r\n        //             \"2. high\": \"125.3800\",\r\n        //             \"3. low\": \"125.2500\",\r\n        //             \"4. close\": \"125.2800\",\r\n        //             \"5. volume\": \"46032\"\r\n        //         },\r\n        //         \"2020-12-18 15:35:00\": {\r\n        //             \"1. open\": \"125.1250\",\r\n        //             \"2. high\": \"125.3400\",\r\n        //             \"3. low\": \"125.1250\",\r\n        //             \"4. close\": \"125.3325\",\r\n        //             \"5. volume\": \"37313\"\r\n        //         },\r\n        //         \"2020-12-18 15:30:00\": {\r\n        //             \"1. open\": \"125.2000\",\r\n        //             \"2. high\": \"125.2000\",\r\n        //             \"3. low\": \"125.0300\",\r\n        //             \"4. close\": \"125.1300\",\r\n        //             \"5. volume\": \"48019\"\r\n        //         },\r\n        //         \"2020-12-18 15:25:00\": {\r\n        //             \"1. open\": \"125.3600\",\r\n        //             \"2. high\": \"125.3800\",\r\n        //             \"3. low\": \"125.1600\",\r\n        //             \"4. close\": \"125.2000\",\r\n        //             \"5. volume\": \"34786\"\r\n        //         },\r\n        //         \"2020-12-18 15:20:00\": {\r\n        //             \"1. open\": \"125.2800\",\r\n        //             \"2. high\": \"125.4600\",\r\n        //             \"3. low\": \"125.2800\",\r\n        //             \"4. close\": \"125.3495\",\r\n        //             \"5. volume\": \"31455\"\r\n        //         },\r\n        //         \"2020-12-18 15:15:00\": {\r\n        //             \"1. open\": \"125.3700\",\r\n        //             \"2. high\": \"125.3700\",\r\n        //             \"3. low\": \"125.2000\",\r\n        //             \"4. close\": \"125.2700\",\r\n        //             \"5. volume\": \"34627\"\r\n        //         },\r\n        //         \"2020-12-18 15:10:00\": {\r\n        //             \"1. open\": \"125.3700\",\r\n        //             \"2. high\": \"125.4500\",\r\n        //             \"3. low\": \"125.3600\",\r\n        //             \"4. close\": \"125.3600\",\r\n        //             \"5. volume\": \"23692\"\r\n        //         },\r\n        //         \"2020-12-18 15:05:00\": {\r\n        //             \"1. open\": \"125.2800\",\r\n        //             \"2. high\": \"125.3820\",\r\n        //             \"3. low\": \"125.2400\",\r\n        //             \"4. close\": \"125.3650\",\r\n        //             \"5. volume\": \"23310\"\r\n        //         },\r\n        //         \"2020-12-18 15:00:00\": {\r\n        //             \"1. open\": \"125.3300\",\r\n        //             \"2. high\": \"125.3400\",\r\n        //             \"3. low\": \"125.2000\",\r\n        //             \"4. close\": \"125.2602\",\r\n        //             \"5. volume\": \"29349\"\r\n        //         },\r\n        //         \"2020-12-18 14:55:00\": {\r\n        //             \"1. open\": \"125.4900\",\r\n        //             \"2. high\": \"125.5100\",\r\n        //             \"3. low\": \"125.3100\",\r\n        //             \"4. close\": \"125.3100\",\r\n        //             \"5. volume\": \"32066\"\r\n        //         },\r\n        //         \"2020-12-18 14:50:00\": {\r\n        //             \"1. open\": \"125.5100\",\r\n        //             \"2. high\": \"125.5500\",\r\n        //             \"3. low\": \"125.4100\",\r\n        //             \"4. close\": \"125.5000\",\r\n        //             \"5. volume\": \"36671\"\r\n        //         },\r\n        //         \"2020-12-18 14:45:00\": {\r\n        //             \"1. open\": \"125.4400\",\r\n        //             \"2. high\": \"125.5500\",\r\n        //             \"3. low\": \"125.4200\",\r\n        //             \"4. close\": \"125.4800\",\r\n        //             \"5. volume\": \"19625\"\r\n        //         },\r\n        //         \"2020-12-18 14:40:00\": {\r\n        //             \"1. open\": \"125.4100\",\r\n        //             \"2. high\": \"125.4700\",\r\n        //             \"3. low\": \"125.3500\",\r\n        //             \"4. close\": \"125.4500\",\r\n        //             \"5. volume\": \"25853\"\r\n        //         },\r\n        //         \"2020-12-18 14:35:00\": {\r\n        //             \"1. open\": \"125.3430\",\r\n        //             \"2. high\": \"125.4800\",\r\n        //             \"3. low\": \"125.3400\",\r\n        //             \"4. close\": \"125.4000\",\r\n        //             \"5. volume\": \"24441\"\r\n        //         },\r\n        //         \"2020-12-18 14:30:00\": {\r\n        //             \"1. open\": \"125.3200\",\r\n        //             \"2. high\": \"125.3700\",\r\n        //             \"3. low\": \"125.2200\",\r\n        //             \"4. close\": \"125.3575\",\r\n        //             \"5. volume\": \"31776\"\r\n        //         },\r\n        //         \"2020-12-18 14:25:00\": {\r\n        //             \"1. open\": \"125.3400\",\r\n        //             \"2. high\": \"125.3800\",\r\n        //             \"3. low\": \"125.3000\",\r\n        //             \"4. close\": \"125.3200\",\r\n        //             \"5. volume\": \"38675\"\r\n        //         },\r\n        //         \"2020-12-18 14:20:00\": {\r\n        //             \"1. open\": \"125.4200\",\r\n        //             \"2. high\": \"125.4250\",\r\n        //             \"3. low\": \"125.2500\",\r\n        //             \"4. close\": \"125.3400\",\r\n        //             \"5. volume\": \"23364\"\r\n        //         },\r\n        //         \"2020-12-18 14:15:00\": {\r\n        //             \"1. open\": \"125.4150\",\r\n        //             \"2. high\": \"125.4600\",\r\n        //             \"3. low\": \"125.3300\",\r\n        //             \"4. close\": \"125.4169\",\r\n        //             \"5. volume\": \"33920\"\r\n        //         },\r\n        //         \"2020-12-18 14:10:00\": {\r\n        //             \"1. open\": \"125.2000\",\r\n        //             \"2. high\": \"125.4206\",\r\n        //             \"3. low\": \"125.2000\",\r\n        //             \"4. close\": \"125.4150\",\r\n        //             \"5. volume\": \"19500\"\r\n        //         },\r\n        //         \"2020-12-18 14:05:00\": {\r\n        //             \"1. open\": \"125.3900\",\r\n        //             \"2. high\": \"125.4050\",\r\n        //             \"3. low\": \"125.1600\",\r\n        //             \"4. close\": \"125.1955\",\r\n        //             \"5. volume\": \"25454\"\r\n        //         },\r\n        //         \"2020-12-18 14:00:00\": {\r\n        //             \"1. open\": \"125.2900\",\r\n        //             \"2. high\": \"125.4100\",\r\n        //             \"3. low\": \"125.2900\",\r\n        //             \"4. close\": \"125.4100\",\r\n        //             \"5. volume\": \"15695\"\r\n        //         },\r\n        //         \"2020-12-18 13:55:00\": {\r\n        //             \"1. open\": \"125.3470\",\r\n        //             \"2. high\": \"125.3600\",\r\n        //             \"3. low\": \"125.2600\",\r\n        //             \"4. close\": \"125.2970\",\r\n        //             \"5. volume\": \"19843\"\r\n        //         },\r\n        //         \"2020-12-18 13:50:00\": {\r\n        //             \"1. open\": \"125.3730\",\r\n        //             \"2. high\": \"125.4400\",\r\n        //             \"3. low\": \"125.3200\",\r\n        //             \"4. close\": \"125.3463\",\r\n        //             \"5. volume\": \"14090\"\r\n        //         },\r\n        //         \"2020-12-18 13:45:00\": {\r\n        //             \"1. open\": \"125.3100\",\r\n        //             \"2. high\": \"125.4100\",\r\n        //             \"3. low\": \"125.2900\",\r\n        //             \"4. close\": \"125.3793\",\r\n        //             \"5. volume\": \"30606\"\r\n        //         },\r\n        //         \"2020-12-18 13:40:00\": {\r\n        //             \"1. open\": \"125.4200\",\r\n        //             \"2. high\": \"125.4500\",\r\n        //             \"3. low\": \"125.3000\",\r\n        //             \"4. close\": \"125.3100\",\r\n        //             \"5. volume\": \"19884\"\r\n        //         },\r\n        //         \"2020-12-18 13:35:00\": {\r\n        //             \"1. open\": \"125.6400\",\r\n        //             \"2. high\": \"125.6700\",\r\n        //             \"3. low\": \"125.4200\",\r\n        //             \"4. close\": \"125.4250\",\r\n        //             \"5. volume\": \"25854\"\r\n        //         },\r\n        //         \"2020-12-18 13:30:00\": {\r\n        //             \"1. open\": \"125.5898\",\r\n        //             \"2. high\": \"125.6696\",\r\n        //             \"3. low\": \"125.5705\",\r\n        //             \"4. close\": \"125.6500\",\r\n        //             \"5. volume\": \"17079\"\r\n        //         },\r\n        //         \"2020-12-18 13:25:00\": {\r\n        //             \"1. open\": \"125.4700\",\r\n        //             \"2. high\": \"125.6000\",\r\n        //             \"3. low\": \"125.4350\",\r\n        //             \"4. close\": \"125.5951\",\r\n        //             \"5. volume\": \"20086\"\r\n        //         },\r\n        //         \"2020-12-18 13:20:00\": {\r\n        //             \"1. open\": \"125.5200\",\r\n        //             \"2. high\": \"125.5200\",\r\n        //             \"3. low\": \"125.4400\",\r\n        //             \"4. close\": \"125.4999\",\r\n        //             \"5. volume\": \"23088\"\r\n        //         },\r\n        //         \"2020-12-18 13:15:00\": {\r\n        //             \"1. open\": \"125.4750\",\r\n        //             \"2. high\": \"125.5278\",\r\n        //             \"3. low\": \"125.4315\",\r\n        //             \"4. close\": \"125.5278\",\r\n        //             \"5. volume\": \"19052\"\r\n        //         },\r\n        //         \"2020-12-18 13:10:00\": {\r\n        //             \"1. open\": \"125.5400\",\r\n        //             \"2. high\": \"125.5500\",\r\n        //             \"3. low\": \"125.4500\",\r\n        //             \"4. close\": \"125.4815\",\r\n        //             \"5. volume\": \"27962\"\r\n        //         },\r\n        //         \"2020-12-18 13:05:00\": {\r\n        //             \"1. open\": \"125.6800\",\r\n        //             \"2. high\": \"125.6900\",\r\n        //             \"3. low\": \"125.5400\",\r\n        //             \"4. close\": \"125.5450\",\r\n        //             \"5. volume\": \"23745\"\r\n        //         },\r\n        //         \"2020-12-18 13:00:00\": {\r\n        //             \"1. open\": \"125.7400\",\r\n        //             \"2. high\": \"125.7400\",\r\n        //             \"3. low\": \"125.6500\",\r\n        //             \"4. close\": \"125.6750\",\r\n        //             \"5. volume\": \"29930\"\r\n        //         },\r\n        //         \"2020-12-18 12:55:00\": {\r\n        //             \"1. open\": \"125.8900\",\r\n        //             \"2. high\": \"125.9100\",\r\n        //             \"3. low\": \"125.7100\",\r\n        //             \"4. close\": \"125.7100\",\r\n        //             \"5. volume\": \"16959\"\r\n        //         },\r\n        //         \"2020-12-18 12:50:00\": {\r\n        //             \"1. open\": \"125.9000\",\r\n        //             \"2. high\": \"125.9100\",\r\n        //             \"3. low\": \"125.8206\",\r\n        //             \"4. close\": \"125.8899\",\r\n        //             \"5. volume\": \"14964\"\r\n        //         },\r\n        //         \"2020-12-18 12:45:00\": {\r\n        //             \"1. open\": \"126.0000\",\r\n        //             \"2. high\": \"126.0300\",\r\n        //             \"3. low\": \"125.8920\",\r\n        //             \"4. close\": \"125.9000\",\r\n        //             \"5. volume\": \"16909\"\r\n        //         },\r\n        //         \"2020-12-18 12:40:00\": {\r\n        //             \"1. open\": \"125.8400\",\r\n        //             \"2. high\": \"126.0000\",\r\n        //             \"3. low\": \"125.8400\",\r\n        //             \"4. close\": \"125.9850\",\r\n        //             \"5. volume\": \"22346\"\r\n        //         },\r\n        //         \"2020-12-18 12:35:00\": {\r\n        //             \"1. open\": \"125.8300\",\r\n        //             \"2. high\": \"125.9200\",\r\n        //             \"3. low\": \"125.8224\",\r\n        //             \"4. close\": \"125.8850\",\r\n        //             \"5. volume\": \"16503\"\r\n        //         },\r\n        //         \"2020-12-18 12:30:00\": {\r\n        //             \"1. open\": \"125.7650\",\r\n        //             \"2. high\": \"125.8786\",\r\n        //             \"3. low\": \"125.7650\",\r\n        //             \"4. close\": \"125.8339\",\r\n        //             \"5. volume\": \"15779\"\r\n        //         },\r\n        //         \"2020-12-18 12:25:00\": {\r\n        //             \"1. open\": \"125.9300\",\r\n        //             \"2. high\": \"125.9300\",\r\n        //             \"3. low\": \"125.7600\",\r\n        //             \"4. close\": \"125.8249\",\r\n        //             \"5. volume\": \"29469\"\r\n        //         },\r\n        //         \"2020-12-18 12:20:00\": {\r\n        //             \"1. open\": \"125.7850\",\r\n        //             \"2. high\": \"126.0400\",\r\n        //             \"3. low\": \"125.7850\",\r\n        //             \"4. close\": \"125.9500\",\r\n        //             \"5. volume\": \"36203\"\r\n        //         },\r\n        //         \"2020-12-18 12:15:00\": {\r\n        //             \"1. open\": \"125.8000\",\r\n        //             \"2. high\": \"125.8100\",\r\n        //             \"3. low\": \"125.7600\",\r\n        //             \"4. close\": \"125.7874\",\r\n        //             \"5. volume\": \"14371\"\r\n        //         },\r\n        //         \"2020-12-18 12:10:00\": {\r\n        //             \"1. open\": \"125.8900\",\r\n        //             \"2. high\": \"125.9300\",\r\n        //             \"3. low\": \"125.7900\",\r\n        //             \"4. close\": \"125.8150\",\r\n        //             \"5. volume\": \"20835\"\r\n        //         },\r\n        //         \"2020-12-18 12:05:00\": {\r\n        //             \"1. open\": \"125.4700\",\r\n        //             \"2. high\": \"125.9100\",\r\n        //             \"3. low\": \"125.4700\",\r\n        //             \"4. close\": \"125.9100\",\r\n        //             \"5. volume\": \"21680\"\r\n        //         },\r\n        //         \"2020-12-18 12:00:00\": {\r\n        //             \"1. open\": \"125.7100\",\r\n        //             \"2. high\": \"125.7100\",\r\n        //             \"3. low\": \"125.4450\",\r\n        //             \"4. close\": \"125.4500\",\r\n        //             \"5. volume\": \"33958\"\r\n        //         },\r\n        //         \"2020-12-18 11:55:00\": {\r\n        //             \"1. open\": \"125.5601\",\r\n        //             \"2. high\": \"125.7050\",\r\n        //             \"3. low\": \"125.5300\",\r\n        //             \"4. close\": \"125.7050\",\r\n        //             \"5. volume\": \"36019\"\r\n        //         },\r\n        //         \"2020-12-18 11:50:00\": {\r\n        //             \"1. open\": \"125.4400\",\r\n        //             \"2. high\": \"125.6000\",\r\n        //             \"3. low\": \"125.4400\",\r\n        //             \"4. close\": \"125.5776\",\r\n        //             \"5. volume\": \"18762\"\r\n        //         },\r\n        //         \"2020-12-18 11:45:00\": {\r\n        //             \"1. open\": \"125.6300\",\r\n        //             \"2. high\": \"125.6400\",\r\n        //             \"3. low\": \"125.4200\",\r\n        //             \"4. close\": \"125.4200\",\r\n        //             \"5. volume\": \"23059\"\r\n        //         },\r\n        //         \"2020-12-18 11:40:00\": {\r\n        //             \"1. open\": \"125.6950\",\r\n        //             \"2. high\": \"125.8000\",\r\n        //             \"3. low\": \"125.6600\",\r\n        //             \"4. close\": \"125.6600\",\r\n        //             \"5. volume\": \"23196\"\r\n        //         },\r\n        //         \"2020-12-18 11:35:00\": {\r\n        //             \"1. open\": \"125.6600\",\r\n        //             \"2. high\": \"125.7300\",\r\n        //             \"3. low\": \"125.6000\",\r\n        //             \"4. close\": \"125.7000\",\r\n        //             \"5. volume\": \"28080\"\r\n        //         },\r\n        //         \"2020-12-18 11:30:00\": {\r\n        //             \"1. open\": \"125.6020\",\r\n        //             \"2. high\": \"125.7000\",\r\n        //             \"3. low\": \"125.5900\",\r\n        //             \"4. close\": \"125.6764\",\r\n        //             \"5. volume\": \"37992\"\r\n        //         },\r\n        //         \"2020-12-18 11:25:00\": {\r\n        //             \"1. open\": \"125.3691\",\r\n        //             \"2. high\": \"125.6400\",\r\n        //             \"3. low\": \"125.3400\",\r\n        //             \"4. close\": \"125.6400\",\r\n        //             \"5. volume\": \"26753\"\r\n        //         },\r\n        //         \"2020-12-18 11:20:00\": {\r\n        //             \"1. open\": \"125.0900\",\r\n        //             \"2. high\": \"125.3800\",\r\n        //             \"3. low\": \"124.9700\",\r\n        //             \"4. close\": \"125.3800\",\r\n        //             \"5. volume\": \"37302\"\r\n        //         },\r\n        //         \"2020-12-18 11:15:00\": {\r\n        //             \"1. open\": \"125.3875\",\r\n        //             \"2. high\": \"125.3979\",\r\n        //             \"3. low\": \"125.0800\",\r\n        //             \"4. close\": \"125.1050\",\r\n        //             \"5. volume\": \"27673\"\r\n        //         },\r\n        //         \"2020-12-18 11:10:00\": {\r\n        //             \"1. open\": \"125.4300\",\r\n        //             \"2. high\": \"125.4800\",\r\n        //             \"3. low\": \"125.3000\",\r\n        //             \"4. close\": \"125.3800\",\r\n        //             \"5. volume\": \"17894\"\r\n        //         },\r\n        //         \"2020-12-18 11:05:00\": {\r\n        //             \"1. open\": \"125.5000\",\r\n        //             \"2. high\": \"125.5589\",\r\n        //             \"3. low\": \"125.4200\",\r\n        //             \"4. close\": \"125.4300\",\r\n        //             \"5. volume\": \"20369\"\r\n        //         },\r\n        //         \"2020-12-18 11:00:00\": {\r\n        //             \"1. open\": \"125.4250\",\r\n        //             \"2. high\": \"125.6000\",\r\n        //             \"3. low\": \"125.4250\",\r\n        //             \"4. close\": \"125.5300\",\r\n        //             \"5. volume\": \"24913\"\r\n        //         },\r\n        //         \"2020-12-18 10:55:00\": {\r\n        //             \"1. open\": \"125.3800\",\r\n        //             \"2. high\": \"125.5100\",\r\n        //             \"3. low\": \"125.3750\",\r\n        //             \"4. close\": \"125.4200\",\r\n        //             \"5. volume\": \"11539\"\r\n        //         },\r\n        //         \"2020-12-18 10:50:00\": {\r\n        //             \"1. open\": \"125.5821\",\r\n        //             \"2. high\": \"125.6000\",\r\n        //             \"3. low\": \"125.3290\",\r\n        //             \"4. close\": \"125.4100\",\r\n        //             \"5. volume\": \"26193\"\r\n        //         },\r\n        //         \"2020-12-18 10:45:00\": {\r\n        //             \"1. open\": \"125.4400\",\r\n        //             \"2. high\": \"125.6200\",\r\n        //             \"3. low\": \"125.3819\",\r\n        //             \"4. close\": \"125.5600\",\r\n        //             \"5. volume\": \"23154\"\r\n        //         },\r\n        //         \"2020-12-18 10:40:00\": {\r\n        //             \"1. open\": \"125.1400\",\r\n        //             \"2. high\": \"125.4900\",\r\n        //             \"3. low\": \"125.1160\",\r\n        //             \"4. close\": \"125.4350\",\r\n        //             \"5. volume\": \"34045\"\r\n        //         },\r\n        //         \"2020-12-18 10:35:00\": {\r\n        //             \"1. open\": \"125.2550\",\r\n        //             \"2. high\": \"125.2900\",\r\n        //             \"3. low\": \"125.1400\",\r\n        //             \"4. close\": \"125.1700\",\r\n        //             \"5. volume\": \"24347\"\r\n        //         },\r\n        //         \"2020-12-18 10:30:00\": {\r\n        //             \"1. open\": \"125.4600\",\r\n        //             \"2. high\": \"125.5000\",\r\n        //             \"3. low\": \"125.1600\",\r\n        //             \"4. close\": \"125.2600\",\r\n        //             \"5. volume\": \"27564\"\r\n        //         },\r\n        //         \"2020-12-18 10:25:00\": {\r\n        //             \"1. open\": \"125.6400\",\r\n        //             \"2. high\": \"125.6400\",\r\n        //             \"3. low\": \"125.3700\",\r\n        //             \"4. close\": \"125.3800\",\r\n        //             \"5. volume\": \"27091\"\r\n        //         },\r\n        //         \"2020-12-18 10:20:00\": {\r\n        //             \"1. open\": \"125.9100\",\r\n        //             \"2. high\": \"125.9100\",\r\n        //             \"3. low\": \"125.5700\",\r\n        //             \"4. close\": \"125.6700\",\r\n        //             \"5. volume\": \"18014\"\r\n        //         },\r\n        //         \"2020-12-18 10:15:00\": {\r\n        //             \"1. open\": \"125.7400\",\r\n        //             \"2. high\": \"125.9705\",\r\n        //             \"3. low\": \"125.6500\",\r\n        //             \"4. close\": \"125.8803\",\r\n        //             \"5. volume\": \"22148\"\r\n        //         },\r\n        //         \"2020-12-18 10:10:00\": {\r\n        //             \"1. open\": \"125.5650\",\r\n        //             \"2. high\": \"125.7400\",\r\n        //             \"3. low\": \"125.4900\",\r\n        //             \"4. close\": \"125.7000\",\r\n        //             \"5. volume\": \"32276\"\r\n        //         },\r\n        //         \"2020-12-18 10:05:00\": {\r\n        //             \"1. open\": \"126.0100\",\r\n        //             \"2. high\": \"126.1500\",\r\n        //             \"3. low\": \"125.4700\",\r\n        //             \"4. close\": \"125.5750\",\r\n        //             \"5. volume\": \"34741\"\r\n        //         },\r\n        //         \"2020-12-18 10:00:00\": {\r\n        //             \"1. open\": \"125.8200\",\r\n        //             \"2. high\": \"126.1500\",\r\n        //             \"3. low\": \"125.7900\",\r\n        //             \"4. close\": \"126.0100\",\r\n        //             \"5. volume\": \"31882\"\r\n        //         },\r\n        //         \"2020-12-18 09:55:00\": {\r\n        //             \"1. open\": \"125.9370\",\r\n        //             \"2. high\": \"126.1100\",\r\n        //             \"3. low\": \"125.6400\",\r\n        //             \"4. close\": \"125.7900\",\r\n        //             \"5. volume\": \"38614\"\r\n        //         },\r\n        //         \"2020-12-18 09:50:00\": {\r\n        //             \"1. open\": \"126.0100\",\r\n        //             \"2. high\": \"126.2400\",\r\n        //             \"3. low\": \"125.7500\",\r\n        //             \"4. close\": \"125.9301\",\r\n        //             \"5. volume\": \"40402\"\r\n        //         },\r\n        //         \"2020-12-18 09:45:00\": {\r\n        //             \"1. open\": \"126.2200\",\r\n        //             \"2. high\": \"126.2200\",\r\n        //             \"3. low\": \"125.7500\",\r\n        //             \"4. close\": \"126.0450\",\r\n        //             \"5. volume\": \"39724\"\r\n        //         },\r\n        //         \"2020-12-18 09:40:00\": {\r\n        //             \"1. open\": \"126.0800\",\r\n        //             \"2. high\": \"126.3300\",\r\n        //             \"3. low\": \"126.0000\",\r\n        //             \"4. close\": \"126.2150\",\r\n        //             \"5. volume\": \"49290\"\r\n        //         },\r\n        //         \"2020-12-18 09:35:00\": {\r\n        //             \"1. open\": \"125.5900\",\r\n        //             \"2. high\": \"126.1400\",\r\n        //             \"3. low\": \"125.0000\",\r\n        //             \"4. close\": \"126.1400\",\r\n        //             \"5. volume\": \"2078431\"\r\n        //         },\r\n        //         \"2020-12-18 09:30:00\": {\r\n        //             \"1. open\": \"125.5500\",\r\n        //             \"2. high\": \"125.7500\",\r\n        //             \"3. low\": \"125.5500\",\r\n        //             \"4. close\": \"125.7500\",\r\n        //             \"5. volume\": \"1668\"\r\n        //         },\r\n        //         \"2020-12-18 09:20:00\": {\r\n        //             \"1. open\": \"125.5500\",\r\n        //             \"2. high\": \"125.5500\",\r\n        //             \"3. low\": \"125.5500\",\r\n        //             \"4. close\": \"125.5500\",\r\n        //             \"5. volume\": \"309\"\r\n        //         },\r\n        //         \"2020-12-18 08:55:00\": {\r\n        //             \"1. open\": \"125.5600\",\r\n        //             \"2. high\": \"125.5700\",\r\n        //             \"3. low\": \"125.5400\",\r\n        //             \"4. close\": \"125.5400\",\r\n        //             \"5. volume\": \"774\"\r\n        //         },\r\n        //         \"2020-12-18 08:50:00\": {\r\n        //             \"1. open\": \"125.5600\",\r\n        //             \"2. high\": \"125.5600\",\r\n        //             \"3. low\": \"125.5600\",\r\n        //             \"4. close\": \"125.5600\",\r\n        //             \"5. volume\": \"438\"\r\n        //         },\r\n        //         \"2020-12-18 08:45:00\": {\r\n        //             \"1. open\": \"125.6900\",\r\n        //             \"2. high\": \"125.6900\",\r\n        //             \"3. low\": \"125.5727\",\r\n        //             \"4. close\": \"125.5727\",\r\n        //             \"5. volume\": \"368\"\r\n        //         },\r\n        //         \"2020-12-18 08:30:00\": {\r\n        //             \"1. open\": \"125.7000\",\r\n        //             \"2. high\": \"125.7000\",\r\n        //             \"3. low\": \"125.7000\",\r\n        //             \"4. close\": \"125.7000\",\r\n        //             \"5. volume\": \"100\"\r\n        //         },\r\n        //         \"2020-12-18 08:20:00\": {\r\n        //             \"1. open\": \"125.5500\",\r\n        //             \"2. high\": \"125.5500\",\r\n        //             \"3. low\": \"125.5500\",\r\n        //             \"4. close\": \"125.5500\",\r\n        //             \"5. volume\": \"14557\"\r\n        //         }\r\n        //     }\r\n        // };\r\n        // // const parseDate = timeParse(\"%Y-%m-%d\");\r\n        // for (let x in data['Time Series (5min)']){\r\n        //             resultdata.push({\r\n        //                 stock_symbol,\r\n        //                 date: new Date(x),\r\n        //                 open: data['Time Series (5min)'][x]['1. open'],\r\n        //                 high: data['Time Series (5min)'][x]['2. high'],\r\n        //                 low: data['Time Series (5min)'][x]['3. low'],\r\n        //                 close: data['Time Series (5min)'][x]['4. close'],\r\n        //                 volume: +data['Time Series (5min)'][x]['5. volume']\r\n        //             })\r\n        // }\r\n    }catch (e) {\r\n        console.log(e)\r\n        \r\n    }\r\n    // const resultdata = {\r\n    //     stock_symbol,\r\n    //     date: period,\r\n    //     close: closeValues,\r\n    //     open: openValues,\r\n    //     high: highValues,\r\n    //     volume: volumeValues\r\n    // };\r\n    return resultdata;\r\n}\r\n","C:\\Users\\kpham\\OneDrive - BioVectra\\Desktop\\StockChart\\Stock-Chart\\src\\DisplayCharts\\AreaChart.js",["61","62"],"\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { scaleTime } from \"d3-scale\";\r\nimport { curveMonotoneX } from \"d3-shape\";\r\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\r\nimport { AreaSeries } from \"react-stockcharts/lib/series\";\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nimport { OHLCTooltip } from \"react-stockcharts/lib/tooltip\";\r\nimport { createVerticalLinearGradient, hexToRGBA } from \"react-stockcharts/lib/utils\";\r\nimport classes from '../styles/Canvas.module.css';\r\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\r\nimport { last } from \"react-stockcharts/lib/utils\";\r\nimport { format } from \"d3-format\";\r\nimport { timeFormat } from \"d3-time-format\";\r\n\r\nimport {\r\n\tCrossHairCursor,\r\n\tMouseCoordinateX,\r\n\tMouseCoordinateY\r\n} from \"react-stockcharts/lib/coordinates\";\r\nconst canvasGradient = createVerticalLinearGradient([\r\n\t{ stop: 0, color: hexToRGBA(\"#b5d0ff\", 0.2) },\r\n\t{ stop: 0.7, color: hexToRGBA(\"#6fa4fc\", 0.4) },\r\n\t{ stop: 1, color: hexToRGBA(\"#4286f4\", 0.8) },\r\n]);\r\n\r\nclass AreaChart extends React.Component {\r\n\trender() {\r\n        const { type, data: initialData, width, ratio } = this.props;\r\n\r\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider.inputDateAccessor(\r\n\t\t\td => d.date\r\n\t\t);\r\n\t\tconst { data, xScale, xAccessor, displayXAccessor } = xScaleProvider(\r\n\t\t\tinitialData\r\n\t\t);\r\n\r\n\t\tconst start = xAccessor(last(data));\r\n\t\tconst end = xAccessor(data[Math.max(0, data.length - 150)]);\r\n\t\tconst xExtents = [start, end];\r\n\t\treturn (\r\n\t\t\t<ChartCanvas ratio={ratio} width={width} height={400}\r\n\t\t\t\tmargin={{ left: 70, right: 70, top: 10, bottom: 30 }}\r\n\t\t\t\tseriesName=\"MSFT\"\r\n                data={data} type={type}\r\n                className={classes.canvas}\r\n\t\t\t\txAccessor={xAccessor}\r\n\t\t\t\txScale={xScale}\r\n\t\t\t\tdisplayXAccessor={displayXAccessor}\r\n\t\t\t\txExtents={xExtents}\r\n\t\t\t>\r\n\t\t\t\t<Chart id={0} yExtents={d => d.close}>\r\n\t\t\t\t\t<defs>\r\n\t\t\t\t\t\t<linearGradient id=\"MyGradient\" x1=\"0\" y1=\"100%\" x2=\"0\" y2=\"0%\">\r\n\t\t\t\t\t\t\t<stop offset=\"0%\" stopColor=\"#b5d0ff\" stopOpacity={0.2} />\r\n\t\t\t\t\t\t\t<stop offset=\"70%\" stopColor=\"#6fa4fc\" stopOpacity={0.4} />\r\n\t\t\t\t\t\t\t<stop offset=\"100%\"  stopColor=\"#4286f4\" stopOpacity={0.8} />\r\n\t\t\t\t\t\t</linearGradient>\r\n\t\t\t\t\t</defs>\r\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\r\n\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" />\r\n\t\t\t\t\t<MouseCoordinateX\r\n\t\t\t\t\t\tat=\"bottom\"\r\n\t\t\t\t\t\torient=\"bottom\"\r\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\r\n\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\tat=\"right\"\r\n\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<AreaSeries\r\n\t\t\t\t\t\tyAccessor={d => d.close}\r\n\t\t\t\t\t\tfill=\"url(#MyGradient)\"\r\n\t\t\t\t\t\tstrokeWidth={2}\r\n\t\t\t\t\t\tinterpolation={curveMonotoneX}\r\n\t\t\t\t\t\tcanvasGradient={canvasGradient}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Chart>\r\n\t\t\t\t\r\n\t\t\t\t<CrossHairCursor />\r\n\t\t\t</ChartCanvas>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nAreaChart.propTypes = {\r\n\tdata: PropTypes.array.isRequired,\r\n\twidth: PropTypes.number.isRequired,\r\n\tratio: PropTypes.number.isRequired,\r\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\r\n};\r\n\r\nAreaChart.defaultProps = {\r\n\ttype: \"svg\",\r\n};\r\nAreaChart = fitWidth(AreaChart);\r\n\r\nexport default AreaChart;",["63","64"],"C:\\Users\\kpham\\OneDrive - BioVectra\\Desktop\\StockChart\\Stock-Chart\\src\\DisplayCharts\\CandleStick.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"69","severity":1,"message":"73","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":22},{"ruleId":"69","severity":1,"message":"74","line":13,"column":8,"nodeType":"71","messageId":"72","endLine":13,"endColumn":13},{"ruleId":"69","severity":1,"message":"75","line":14,"column":7,"nodeType":"71","messageId":"72","endLine":14,"endColumn":15},{"ruleId":"69","severity":1,"message":"76","line":32,"column":7,"nodeType":"71","messageId":"72","endLine":32,"endColumn":12},{"ruleId":"77","severity":1,"message":"78","line":46,"column":15,"nodeType":"79","endLine":78,"endColumn":6},{"ruleId":"80","severity":1,"message":"81","line":47,"column":28,"nodeType":"82","messageId":"83","endLine":47,"endColumn":30},{"ruleId":"77","severity":1,"message":"84","line":78,"column":8,"nodeType":"85","endLine":78,"endColumn":24,"suggestions":"86"},{"ruleId":"80","severity":1,"message":"87","line":92,"column":61,"nodeType":"82","messageId":"83","endLine":92,"endColumn":63},{"ruleId":"69","severity":1,"message":"88","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},{"ruleId":"69","severity":1,"message":"89","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"70","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"69","severity":1,"message":"90","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":19},{"ruleId":"69","severity":1,"message":"91","line":6,"column":9,"nodeType":"71","messageId":"72","endLine":6,"endColumn":15},{"ruleId":"69","severity":1,"message":"92","line":7,"column":9,"nodeType":"71","messageId":"72","endLine":7,"endColumn":20},{"ruleId":"69","severity":1,"message":"93","line":8,"column":9,"nodeType":"71","messageId":"72","endLine":8,"endColumn":19},{"ruleId":"69","severity":1,"message":"94","line":9,"column":9,"nodeType":"71","messageId":"72","endLine":9,"endColumn":19},{"ruleId":"69","severity":1,"message":"95","line":10,"column":9,"nodeType":"71","messageId":"72","endLine":10,"endColumn":18},{"ruleId":"69","severity":1,"message":"96","line":11,"column":9,"nodeType":"71","messageId":"72","endLine":11,"endColumn":21},{"ruleId":"69","severity":1,"message":"97","line":4,"column":10,"nodeType":"71","messageId":"72","endLine":4,"endColumn":19},{"ruleId":"69","severity":1,"message":"98","line":10,"column":10,"nodeType":"71","messageId":"72","endLine":10,"endColumn":21},{"ruleId":"65","replacedBy":"99"},{"ruleId":"67","replacedBy":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Getstockdata' is defined but never used.","'axios' is defined but never used.","'dataFile' is assigned a value but never used.","'match' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'setData'. Either include it or remove the dependency array. If 'setData' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["103"],"Expected '===' and instead saw '=='.","'React' is defined but never used.","'useState' is defined but never used.","'timeParse' is defined but never used.","'period' is assigned a value but never used.","'closeValues' is assigned a value but never used.","'openValues' is assigned a value but never used.","'highValues' is assigned a value but never used.","'lowValues' is assigned a value but never used.","'volumeValues' is assigned a value but never used.","'scaleTime' is defined but never used.","'OHLCTooltip' is defined but never used.",["101"],["102"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [setData, tickerSelected]",{"range":"106","text":"107"},[2694,2710],"[setData, tickerSelected]"]